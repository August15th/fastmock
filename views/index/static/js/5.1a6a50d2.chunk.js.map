{"version":3,"sources":["views/Login/LoginForm.js","views/Login/LoginCountData.js","views/Login/Login.js"],"names":["FormItem","es_form","Item","LoginForm","state","loginLoading","userNeedActive","sendCodeLoading","handleSubmit","e","preventDefault","_this","props","form","validateFields","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","err","formData","resp","wrap","_context","prev","next","setState","http","post","username","password","sent","success","userLogin","setLoginInfo","data","userInfo","message","ETools","async","wait","history","push","code","user","stop","this","_x","_x2","apply","arguments","handleSendCode","_callee2","_context2","get","userId","id","modal","title","content","concat","email","getFieldDecorator","_react_16_7_0_react_default","createElement","onSubmit","className","rules","required","input","size","prefix","icon","type","style","color","placeholder","es_button","loading","htmlType","height","Link","to","float","href","spin","display","onClick","whiteSpace","Component","LoginFormRouter","withRouter","LoginCountData","countDataTimer","dataLoading","countData","users","projects","apis","mocks","_this2","getCountData","setInterval","clearInterval","Fragment","react_count_to_default","speed","backgroundColor","React","EnhancedForm","create","Login","showGuide","hideGuide","localStorage","setItem","isLogin","toastr","remove","getItem","qqGroupImg","width","src","rel","target","popover","LoginCountData_LoginCountData","marginBottom"],"mappings":"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","file":"static/js/5.1a6a50d2.chunk.js","sourcesContent":["/* global http */\nimport React, { Component } from 'react';\nimport {\n  Form, Icon, Input, Button, message, Modal, Spin\n} from 'antd';\nimport { withRouter, Link } from 'react-router-dom';\nimport userLogin from '../../utils/UserLogin';\nimport ETools from 'etools';\nconst FormItem = Form.Item;\nclass LoginForm extends Component {\n  state = {\n    loginLoading: false,\n    userNeedActive: false,\n    sendCodeLoading: false\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields(async(err, formData) => {\n      if (!err) {\n        this.setState({\n          loginLoading: true\n        });\n        const resp = await http.post('/api/login', {\n          username: formData.username,\n          password: formData.password\n        }, false);\n        this.setState({\n          loginLoading: false\n        });\n        if (resp.success) {\n          userLogin.setLoginInfo(resp.data.userInfo);\n          message.success('登录成功，正在跳转...', 1);\n          await ETools.async.wait(1000);\n          this.props.history.push('/projects');\n        } else if (resp.code === '0005') {\n          this.setState({\n            userNeedActive: true,\n            user: resp.data.user\n          });\n        }\n      }\n    });\n  }\n  handleSendCode = async() => {\n    this.setState({ sendCodeLoading: true });\n    const resp = await http.get('/api/resendCode', {\n      userId: this.state.user.id\n    }, false);\n    this.setState({ sendCodeLoading: false });\n    if (resp.success) {\n      message.success('发送成功，请登录邮箱注册', 2);\n      Modal.success({\n        title: '提示',\n        content: `发送成功，请登录邮箱${this.state.user.email}激活账号`\n      });\n      this.setState({\n        userNeedActive: false\n      });\n    }\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <FormItem>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: '请输入用户名!' }]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: '请输入密码!' }]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n          )}\n        </FormItem>\n        <FormItem>\n          <Button size=\"large\" loading={this.state.loginLoading} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            登  录\n          </Button>\n          <div style={{ height: '38px' }}>\n            <Link to=\"/register\" style={{ float: 'left' }} className=\"login-link\" >还没有账号？注册账号</Link>\n            <Link to=\"/forgetpwd\" style={{ float: 'right' }} className=\"login-link\" >忘记密码</Link>\n          </div>\n          {this.state.userNeedActive &&\n            <div>\n              {this.state.sendCodeLoading &&\n                <a href=\"javascript:;\" style={{ color: '#f33' }} className=\"login-link\" ><Spin /> 发送中...</a>\n              }\n              {!this.state.sendCodeLoading &&\n                <a href=\"javascript:;\" style={{ color: '#f33', display: 'block' }} onClick={this.handleSendCode} className=\"login-link\" >\n                  <span style={{ whiteSpace: 'nowrap' }}>{'发送激活链接到' + this.state.user.email}</span>\n                </a>\n              }\n            </div>\n          }\n        </FormItem>\n      </Form>\n    );\n  }\n}\nconst LoginFormRouter = withRouter(LoginForm);\nexport default LoginFormRouter;\n","/* global http */\nimport React from 'react';\nimport { Icon } from 'antd';\nimport CountTo from 'react-count-to';\nimport './LoginCountData.scss';\nexport default class LoginCountData extends React.Component {\n  countDataTimer = null\n  state = {\n    dataLoading: false,\n    countData: {\n      users: 0,\n      projects: 0,\n      apis: 0,\n      mocks: 0\n    }\n  }\n  async getCountData() {\n    this.setState({ dataLoading: true });\n    const resp = await http.get('/api/countData');\n    this.setState({ dataLoading: false });\n    if (resp.success) {\n      this.setState({\n        'countData': resp.data\n      });\n    }\n  }\n  componentDidMount() {\n    this.getCountData();\n    this.countDataTimer = setInterval(() => {\n      this.getCountData();\n    }, 10000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.countDataTimer);\n  }\n  render() {\n    return (\n      <>\n        <div className=\"data-grid\">\n          <p className=\"icon\"><Icon type=\"user\"></Icon></p>\n          <p className=\"number\">\n            {!this.state.dataLoading &&\n              <CountTo to={this.state.countData.users} speed={500} />\n            }\n          </p>\n          <p className=\"name\">当前总用户数</p>\n        </div>\n        <div className=\"data-grid\" style={{ backgroundColor: '#68befb' }}>\n          <p className=\"icon\"><Icon type=\"appstore\"></Icon></p>\n          <p className=\"number\">\n            {!this.state.dataLoading &&\n              <CountTo to={this.state.countData.projects} speed={500} />\n            }\n          </p>\n          <p className=\"name\">当前总项目数</p>\n        </div>\n        <div className=\"data-grid\" style={{ backgroundColor: '#26818c' }}>\n          <p className=\"icon\"><Icon type=\"cluster\" /></p>\n          <p className=\"number\">\n            {!this.state.dataLoading &&\n              <CountTo to={this.state.countData.apis} speed={500} />\n            }\n          </p>\n          <p className=\"name\">当前总接口数</p>\n        </div>\n        <div className=\"data-grid\">\n          <p className=\"icon\"><Icon type=\"eye\"></Icon></p>\n          <p className=\"number\">\n            {!this.state.dataLoading &&\n              <CountTo to={this.state.countData.mocks} speed={500} />\n            }\n          </p>\n          <p className=\"name\">接口访问数</p>\n        </div>\n      </>\n    );\n  }\n};\n","import React from 'react';\nimport LoginForm from './LoginForm';\nimport LoginCountData from './LoginCountData';\nimport './Login.scss';\nimport { Form, Popover, Icon, Button } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport toastr from 'toastr';\nimport userLogin from '../../utils/UserLogin';\nlet EnhancedForm = Form.create()(LoginForm);\nclass Login extends React.Component {\n  state = {\n    showGuide: false\n  }\n  hideGuide = () => {\n    this.setState({ showGuide: false });\n    localStorage.setItem('fastmockHomeGuide', 'yes');\n  }\n  componentWillMount() {\n    // 如果用户已经登录过了，直接跳转到项目首页\n    if (userLogin.isLogin()) {\n      this.props.history.push('/projects');\n    }\n  }\n  componentDidMount() {\n    toastr.remove();\n    if (!localStorage.getItem('fastmockHomeGuide')) {\n      this.setState({ 'showGuide': true });\n    }\n  }\n  render() {\n    const qqGroupImg = (\n      <img width=\"150\" src=\"/assets/images/qq-group.jpeg\"/>\n    );\n    return (\n      <div className=\"login-body\">\n        <div className=\"nav\">\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"//fmdocs.fastmock.site\">\n            <Icon type=\"book\" /> 使用文档</a>\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/MarvenGong/fastmock\">\n            <Icon type=\"github\" /> Github</a>\n          <Popover content={qqGroupImg} title=\"扫码进群\">\n            <span><Icon type=\"qq\"></Icon>QQ交流群</span>\n          </Popover>\n        </div>\n        <div className=\"login-main\">\n          <div className=\"login-left-data\">\n            <LoginCountData/>\n          </div>\n          <div className=\"login\">\n            <div className=\"inset animated customClipX\">\n              <div className=\"login-logo\">\n                <img src=\"/assets/images/logo-blue.png\" width=\"396\"></img>\n              </div>\n              <h2 className=\"login-title\">用户登录</h2>\n              <EnhancedForm></EnhancedForm>\n              <h4>关于fastmock</h4>\n              <div>\n              fastmock可以让你在没有后端程序的情况下能真实地在线模拟ajax请求，\n              你可以用fastmock实现项目初期纯前端的效果演示，也可以用fastmock实现开发中的数据模拟从而实现前后端分离\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"login-footer\">\n          <p>&copy; All rights reserved FastMock在线Mock平台</p>\n          <p className=\"beian\">渝ICP备19000613号-2</p>\n        </div>\n        {this.state.showGuide &&\n          <div className=\"home-guide animated customFadeIn\">\n            <div className=\"guide-box\">\n              <p>您没有进错网站，fastmock UI改版了</p>\n              <p>扫码加入我们的QQ交流群</p>\n              <p>方便我们快速处理您遇到的问题</p>\n              <p style={{ marginBottom: '10px' }}>也可以与其他人一起交流</p>\n              <Button onClick={this.hideGuide} size=\"small\" type=\"primary\">我知道了</Button>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n};\nexport default withRouter(Login);\n"],"sourceRoot":""}