{"version":3,"sources":["views/Register/RegisterForm.js","views/Register/Register.js","views/Register/index.js"],"names":["FormItem","es_form","Item","LoginForm","state","loginLoading","handleSubmit","e","preventDefault","_this","props","form","validateFields","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","err","formData","resp","wrap","_context","prev","next","setState","http","post","sent","success","message","history","push","stop","this","_x","_x2","apply","arguments","compareToFirstPassword","rule","value","callback","getFieldValue","getFieldDecorator","_react_16_7_0_react_default","createElement","onSubmit","className","rules","required","max","input","size","prefix","icon","type","style","color","placeholder","validator","es_button","loading","htmlType","textAlign","Link","to","Component","LoginFormRouter","withRouter","EnhancedForm","create","RegisterForm","Login","src","width","React","Register"],"mappings":"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","file":"static/js/7.e41729d7.chunk.js","sourcesContent":["/* global http */\nimport React, { Component } from 'react';\nimport {\n  Form, Icon, Input, Button, message\n} from 'antd';\nimport { withRouter, Link } from 'react-router-dom';\nconst FormItem = Form.Item;\nclass LoginForm extends Component {\n  state = {\n    loginLoading: false\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields(async(err, formData) => {\n      if (!err) {\n        this.setState({\n          loginLoading: true\n        });\n        const resp = await http.post('/api/register', formData, false);\n        this.setState({\n          loginLoading: false\n        });\n        if (resp.success) {\n          message.success('注册成功，正在跳转到登录页面...', 1);\n          this.props.history.push('/');\n        }\n      }\n    });\n  }\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('两次输入的密码不一致，请重新输入'); // eslint-disable-line\n    } else {\n      callback();\n    }\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <FormItem>\n          {getFieldDecorator('username', {\n            rules: [\n              { required: true, message: '请输入登录账号!' },\n              { max: 20, message: '用户名不能超过20个字符!' }\n            ]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('email', {\n            rules: [\n              { required: true, message: '请输入邮箱!' },\n              { type: 'email', message: '请输入正确格式的邮箱' }]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"folder\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"邮箱（用于找回密码）\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('nickname', {\n            rules: [\n              { required: true, message: '请输入昵称!' },\n              { max: 20, message: '昵称不能超过20个字符!' }\n            ]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"昵称（在本站的称呼）\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: '请输入密码!' }]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('repassword', {\n            rules: [{ required: true, message: '请再次输入密码确认!' }, { validator: this.compareToFirstPassword }]\n          })(\n            <Input size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"重复密码\" />\n          )}\n        </FormItem>\n        <FormItem>\n          <Button size=\"large\" loading={this.state.loginLoading} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            提  交\n          </Button>\n          <div style={{ textAlign: 'center' }}><Link className=\"login-link\" to=\"/\">已经有账号？返回登录</Link></div>\n        </FormItem>\n      </Form>\n    );\n  }\n}\nconst LoginFormRouter = withRouter(LoginForm);\nexport default LoginFormRouter;\n","import React from 'react';\nimport RegisterForm from './RegisterForm';\nimport '../Login/Login.scss';\nimport { Form } from 'antd';\nimport { withRouter } from 'react-router-dom';\nlet EnhancedForm = Form.create()(RegisterForm);\nclass Login extends React.Component {\n  componentDidMount() {\n    // console.log(this.props.query);\n  }\n  render() {\n    return (\n      <div className=\"login-body\">\n        <div className=\"login\">\n          <div className=\"inset animated customClipX\">\n            <div className=\"login-logo\">\n              <img src=\"/assets/images/logo-blue.png\" width=\"396\"></img>\n            </div>\n            <h2 className=\"login-title\">用户注册</h2>\n            <EnhancedForm></EnhancedForm>\n          </div>\n        </div>\n        <div className=\"login-footer\">\n          <p>&copy; All rights reserved FastMock在线Mock平台</p>\n          <p className=\"beian\">渝ICP备19000613号-2</p>\n        </div>\n      </div>\n    );\n  }\n};\nexport default withRouter(Login);\n","import Register from './Register';\nexport default Register;\n"],"sourceRoot":""}