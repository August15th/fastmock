{"version":3,"sources":["views/ForgetPwd/ForgetPwdForm.js","views/ForgetPwd/ForgetPwd.js","views/ForgetPwd/index.js"],"names":["FormItem","es_form","Item","LoginForm","state","loginLoading","searchLoading","sendCodeLoading","modifyUser","emailCodeTimeout","sendEmailCodeTimer","handleSearchUser","_callee","form","resp","user","regenerator_default","a","wrap","_context","prev","next","_this","props","setState","http","get","key","getFieldValue","sent","success","data","length","setFieldsValue","email","message","error","stop","this","handleSendCode","_callee2","_context2","setInterval","clearInterval","handleSubmit","e","preventDefault","validateFields","_ref3","Object","asyncToGenerator","mark","_callee3","err","formData","_context3","post","setTimeout","history","push","_x","_x2","apply","arguments","compareToFirstPassword","rule","value","callback","getFieldDecorator","_react_16_7_0_react_default","createElement","onSubmit","className","rules","required","max","input","size","addonAfter","es_button","loading","onClick","prefix","icon","type","style","color","placeholder","id","Fragment","readOnly","disabled","validator","htmlType","textAlign","Link","to","Component","LoginFormRouter","withRouter","EnhancedForm","create","RegisterForm","Login","src","width","React","ForgetPwd"],"mappings":"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","file":"static/js/7.a1a4b63d.chunk.js","sourcesContent":["/* global http */\nimport React, { Component } from 'react';\nimport {\n  Form, Icon, Input, Button, message\n} from 'antd';\nimport { withRouter, Link } from 'react-router-dom';\nimport { spawn } from 'child_process';\nconst FormItem = Form.Item;\nclass LoginForm extends Component {\n  state = {\n    loginLoading: false,\n    searchLoading: false,\n    sendCodeLoading: false,\n    modifyUser: {},\n    emailCodeTimeout: 0\n  }\n  sendEmailCodeTimer = null;\n  handleSearchUser = async() => {\n    const form = this.props.form;\n    this.setState({ searchLoading: true });\n    const resp = await http.get('/api/searchUserExact', {\n      key: this.props.form.getFieldValue('username')\n    }, false);\n    this.setState({ searchLoading: false });\n    if (resp.success && resp.data.length > 0) {\n      const user = resp.data[0];\n      this.setState({ modifyUser: resp.data[0] });\n      form.setFieldsValue({\n        'email': user.email\n      });\n    } else {\n      message.error('没有找到相关用户，请确认信息后重试！');\n      this.setState({\n        modifyUser: {}\n      });\n    }\n  }\n  // 发送验证码\n  handleSendCode = async() => {\n    const form = this.props.form;\n    this.setState({ sendCodeLoading: true });\n    const resp = await http.get('/api/sendForgetPwdCode', {\n      email: form.getFieldValue('email')\n    }, false);\n    if (resp.success) {\n      this.setState({ sendCodeLoading: false, emailCodeTimeout: 60 });\n      this.sendEmailCodeTimer = setInterval(() => {\n        this.setState({ emailCodeTimeout: this.state.emailCodeTimeout - 1 });\n      }, 1000);\n      if (this.state.emailCodeTimeout === 0 && this.sendEmailCodeTimer) {\n        clearInterval(this.sendEmailCodeTimer);\n      }\n    }\n  }\n  // 确认重置密码\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields(async(err, formData) => {\n      if (!err) {\n        this.setState({ loginLoading: true });\n        const resp = await http.post('/api/sureForgetPwd', formData, false);\n        this.setState({ loginLoading: false });\n        if (resp.success) {\n          message.success('重置密码成功，正在跳转到登录页面...', 2);\n          setTimeout(() => {\n            this.props.history.push('/');\n          }, 2000);\n        }\n      }\n    });\n  }\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('newPwd')) {\n      callback('两次输入的密码不一致，请重新输入'); // eslint-disable-line\n    } else {\n      callback();\n    }\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <FormItem>\n          {getFieldDecorator('username', {\n            rules: [\n              { required: true, message: '请输入用户名或邮箱或昵称!' },\n              { max: 20, message: '用户名不能超过20个字符!' }\n            ]\n          })(\n            <Input size=\"large\" addonAfter={\n              (<Button loading={this.state.searchLoading} onClick={this.handleSearchUser}>查找</Button>)\n            } prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" />\n          )}\n        </FormItem>\n        {this.state.modifyUser.id &&\n          <>\n          <FormItem>\n            {getFieldDecorator('email', {\n              rules: [\n                { required: true, message: '请输入邮箱!' },\n                { type: 'email', message: '请输入正确格式的邮箱' }]\n            })(\n              <Input readOnly size=\"large\" addonAfter={\n                (<Button loading={this.state.sendCodeLoading}\n                  disabled={this.state.emailCodeTimeout !== 0}\n                  onClick={this.handleSendCode}>发送验证码\n                  {this.state.emailCodeTimeout !== 0 &&\n                    <span>({this.state.emailCodeTimeout}s)</span>\n                  }\n                </Button>)\n              } prefix={<Icon type=\"folder\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"邮箱（用于激活账号和找回密码）\" />\n            )}\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('code', {\n              rules: [\n                { required: true, message: '请输入验证码!' },\n                { max: 20, message: '昵称不能超过4个字符!' }\n              ]\n            })(\n              <Input size=\"large\" prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"验证码\" />\n            )}\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('newPwd', {\n              rules: [{ required: true, message: '请输入密码!' }]\n            })(\n              <Input size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n            )}\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('repeatNewPwd', {\n              rules: [{ required: true, message: '请再次输入密码确认!' }, { validator: this.compareToFirstPassword }]\n            })(\n              <Input size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"重复密码\" />\n            )}\n          </FormItem>\n          </>\n        }\n        <FormItem>\n          <Button size=\"large\" loading={this.state.loginLoading} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            提  交\n          </Button>\n          <div style={{ textAlign: 'center' }}><Link className=\"login-link\" to=\"/\">已经有账号？返回登录</Link></div>\n        </FormItem>\n      </Form>\n    );\n  }\n}\nconst LoginFormRouter = withRouter(LoginForm);\nexport default LoginFormRouter;\n","import React from 'react';\nimport RegisterForm from './ForgetPwdForm';\nimport '../Login/Login.scss';\nimport { Form } from 'antd';\nimport { withRouter } from 'react-router-dom';\nlet EnhancedForm = Form.create()(RegisterForm);\nclass Login extends React.Component {\n  componentDidMount() {\n    // console.log(this.props.query);\n  }\n  render() {\n    return (\n      <div className=\"login-body\">\n        <div className=\"login\">\n          <div className=\"inset animated customClipX\">\n            <div className=\"login-logo\">\n              <img src=\"/assets/images/logo-blue.png\" width=\"396\"></img>\n            </div>\n            <h2 className=\"login-title\">找回密码</h2>\n            <EnhancedForm></EnhancedForm>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\nexport default withRouter(Login);\n","import ForgetPwd from './ForgetPwd';\nexport default ForgetPwd;\n"],"sourceRoot":""}